{"uid":"454a2329e63965fb","name":"test Python","fullName":"src.test.java.challenges.a20201217_runningWater.test_running_water#test_running_water","historyId":"aa6bf365efcf7dd5a7eb5cd121e928a4","time":{"start":1699518512662,"stop":1699518512663,"duration":1},"status":"failed","statusMessage":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","statusTrace":"cap = [31, 46, 61], volume = 51, expected_result = True\n\n    @allure.epic(\"epic Challenges\")\n    @allure.feature(\"feature Challenges by date\")\n    @allure.story(\"story Running water\")\n    @allure.title(\"test Python\")\n    @allure.tag(\"tag Python\")\n    # @pytest.mark.skip(reason=\"TODO: no way of currently testing this\")\n    @pytest.mark.parametrize(\"cap,volume,expected_result\", test_data)\n    def test_running_water(cap: List[int], volume: int, expected_result: bool):\n>       assert expected_result == runningWater(cap, volume)\nE       assert True == False\nE        +  where False = runningWater([31, 46, 61], 51)\n\nsrc/test/java/challenges/a20201217_runningWater/test_running_water.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"tag Python"},{"name":"epic","value":"epic Challenges"},{"name":"story","value":"story Running water"},{"name":"feature","value":"feature Challenges by date"},{"name":"parentSuite","value":"src.test.java.challenges.a20201217_runningWater"},{"name":"suite","value":"test_running_water"},{"name":"host","value":"fv-az1487-66"},{"name":"thread","value":"2159-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.test.java.challenges.a20201217_runningWater.test_running_water"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cap","value":"[31, 46, 61]"},{"name":"expected_result","value":"True"},{"name":"volume","value":"51"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":123,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":126},"items":[{"uid":"7afd615ea45c0f27","reportUrl":"https://apetrovskiy.github.io/testCoSi/134//#testresult/7afd615ea45c0f27","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699517732648,"stop":1699517732648,"duration":0}},{"uid":"47ae34025ca29161","reportUrl":"https://apetrovskiy.github.io/testCoSi/132//#testresult/47ae34025ca29161","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699465982052,"stop":1699465982052,"duration":0}},{"uid":"cc1a46f0af56206c","reportUrl":"https://apetrovskiy.github.io/testCoSi/131//#testresult/cc1a46f0af56206c","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699463230698,"stop":1699463230698,"duration":0}},{"uid":"33d0108276496e8a","reportUrl":"https://apetrovskiy.github.io/testCoSi/130//#testresult/33d0108276496e8a","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699462400529,"stop":1699462400529,"duration":0}},{"uid":"2e558f5bd59d0142","reportUrl":"https://apetrovskiy.github.io/testCoSi/129//#testresult/2e558f5bd59d0142","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699458213420,"stop":1699458213420,"duration":0}},{"uid":"bb74f11c9bdca88b","reportUrl":"https://apetrovskiy.github.io/testCoSi/128//#testresult/bb74f11c9bdca88b","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699454632239,"stop":1699454632239,"duration":0}},{"uid":"58e7f467a7eeef5c","reportUrl":"https://apetrovskiy.github.io/testCoSi/127//#testresult/58e7f467a7eeef5c","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699448606380,"stop":1699448606380,"duration":0}},{"uid":"12b500a8756c0c9b","reportUrl":"https://apetrovskiy.github.io/testCoSi/126//#testresult/12b500a8756c0c9b","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699406742495,"stop":1699406742496,"duration":1}},{"uid":"d7ba7ad8bb1707fd","reportUrl":"https://apetrovskiy.github.io/testCoSi/125//#testresult/d7ba7ad8bb1707fd","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699406580609,"stop":1699406580609,"duration":0}},{"uid":"f7d19e35c9fda583","reportUrl":"https://apetrovskiy.github.io/testCoSi/124//#testresult/f7d19e35c9fda583","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699405681799,"stop":1699405681799,"duration":0}},{"uid":"e41744ea4548a77b","reportUrl":"https://apetrovskiy.github.io/testCoSi/123//#testresult/e41744ea4548a77b","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699405244331,"stop":1699405244331,"duration":0}},{"uid":"a57a2a8a87c702e1","reportUrl":"https://apetrovskiy.github.io/testCoSi/122//#testresult/a57a2a8a87c702e1","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699404883795,"stop":1699404883795,"duration":0}},{"uid":"3d8d4d1f9498f8f1","reportUrl":"https://apetrovskiy.github.io/testCoSi/121//#testresult/3d8d4d1f9498f8f1","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699401792121,"stop":1699401792121,"duration":0}},{"uid":"9633497ff23a8088","reportUrl":"https://apetrovskiy.github.io/testCoSi/120//#testresult/9633497ff23a8088","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699401092113,"stop":1699401092113,"duration":0}},{"uid":"10fca687933fa06f","reportUrl":"https://apetrovskiy.github.io/testCoSi/118//#testresult/10fca687933fa06f","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699400359538,"stop":1699400359539,"duration":1}},{"uid":"9a06929963865685","reportUrl":"https://apetrovskiy.github.io/testCoSi/119//#testresult/9a06929963865685","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699400395304,"stop":1699400395305,"duration":1}},{"uid":"478025f75d438ee4","reportUrl":"https://apetrovskiy.github.io/testCoSi/117//#testresult/478025f75d438ee4","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1699399352579,"stop":1699399352579,"duration":0}},{"uid":"8debf4ce7461c967","reportUrl":"https://apetrovskiy.github.io/codeSignTest/116//#testresult/8debf4ce7461c967","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1668970125925,"stop":1668970125925,"duration":0}},{"uid":"74f6cccf787c3879","reportUrl":"https://apetrovskiy.github.io/codeSignTest/115//#testresult/74f6cccf787c3879","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1668968915587,"stop":1668968915587,"duration":0}},{"uid":"47829cc9eaa4d672","reportUrl":"https://apetrovskiy.github.io/codeSignTest/114//#testresult/47829cc9eaa4d672","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([31, 46, 61], 51)","time":{"start":1668968769381,"stop":1668968769381,"duration":0}}]},"tags":["tag Python"]},"source":"454a2329e63965fb.json","parameterValues":["[31, 46, 61]","True","51"]}