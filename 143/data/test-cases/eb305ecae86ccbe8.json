{
  "uid" : "eb305ecae86ccbe8",
  "name" : "test Python",
  "fullName" : "src.test.java.challenges.a20201217_runningWater.test_running_water#test_running_water",
  "historyId" : "8d8eebb266268f81897050c8bb0bfb16",
  "time" : {
    "start" : 1700256347280,
    "stop" : 1700256347280,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
  "statusTrace" : "cap = [8, 5, 3], volume = 10, expected_result = True\n\n    @allure.epic(\"epic Challenges\")\n    @allure.feature(\"feature Challenges by date\")\n    @allure.story(\"story Running water\")\n    @allure.parent_suite(\"suite Python\")\n    @allure.title(\"test Python\")\n    @allure.tag(\"tag Python\")\n    # @pytest.mark.skip(reason=\"TODO: no way of currently testing this\")\n    @pytest.mark.parametrize(\"cap,volume,expected_result\", test_data)\n    def test_running_water(cap: List[int], volume: int, expected_result: bool):\n>       assert expected_result == runningWater(cap, volume)\nE       assert True == False\nE        +  where False = runningWater([8, 5, 3], 10)\n\nsrc/test/java/challenges/a20201217_runningWater/test_running_water.py:30: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "feature Challenges by date"
  }, {
    "name" : "tag",
    "value" : "tag Python"
  }, {
    "name" : "parentSuite",
    "value" : "suite Python"
  }, {
    "name" : "story",
    "value" : "story Running water"
  }, {
    "name" : "epic",
    "value" : "epic Challenges"
  }, {
    "name" : "suite",
    "value" : "test_running_water"
  }, {
    "name" : "host",
    "value" : "fv-az1535-641"
  }, {
    "name" : "thread",
    "value" : "2215-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20201217_runningWater.test_running_water"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cap",
    "value" : "[8, 5, 3]"
  }, {
    "name" : "expected_result",
    "value" : "True"
  }, {
    "name" : "volume",
    "value" : "10"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 132,
        "broken" : 0,
        "skipped" : 3,
        "passed" : 0,
        "unknown" : 0,
        "total" : 135
      },
      "items" : [ {
        "uid" : "3a6e1f587058a482",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/142//#testresult/3a6e1f587058a482",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1700255324884,
          "stop" : 1700255324884,
          "duration" : 0
        }
      }, {
        "uid" : "2ba2410e7f73bb5b",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/141//#testresult/2ba2410e7f73bb5b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1700254470593,
          "stop" : 1700254470593,
          "duration" : 0
        }
      }, {
        "uid" : "e2f801df338470c5",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/140//#testresult/e2f801df338470c5",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1700246467837,
          "stop" : 1700246467837,
          "duration" : 0
        }
      }, {
        "uid" : "c95ce37cf5a4900a",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/139//#testresult/c95ce37cf5a4900a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699886397643,
          "stop" : 1699886397644,
          "duration" : 1
        }
      }, {
        "uid" : "78e584ddeea1f367",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/138//#testresult/78e584ddeea1f367",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699884948333,
          "stop" : 1699884948334,
          "duration" : 1
        }
      }, {
        "uid" : "eac054757110e7e8",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/137//#testresult/eac054757110e7e8",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699884922603,
          "stop" : 1699884922603,
          "duration" : 0
        }
      }, {
        "uid" : "d6b7ef4bf9fb4a5f",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/136//#testresult/d6b7ef4bf9fb4a5f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699563854714,
          "stop" : 1699563854714,
          "duration" : 0
        }
      }, {
        "uid" : "149316fc17f19d8c",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/135//#testresult/149316fc17f19d8c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699550001143,
          "stop" : 1699550001143,
          "duration" : 0
        }
      }, {
        "uid" : "ad925acef733b666",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/133//#testresult/ad925acef733b666",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699518512657,
          "stop" : 1699518512657,
          "duration" : 0
        }
      }, {
        "uid" : "ccdc3ae0e0009c7",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/134//#testresult/ccdc3ae0e0009c7",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699517732643,
          "stop" : 1699517732643,
          "duration" : 0
        }
      }, {
        "uid" : "8e9d8ca070921437",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/132//#testresult/8e9d8ca070921437",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699465982047,
          "stop" : 1699465982047,
          "duration" : 0
        }
      }, {
        "uid" : "c152f17a40a6b8ab",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/131//#testresult/c152f17a40a6b8ab",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699463230692,
          "stop" : 1699463230692,
          "duration" : 0
        }
      }, {
        "uid" : "b4bef50017e1fe99",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/130//#testresult/b4bef50017e1fe99",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699462400522,
          "stop" : 1699462400522,
          "duration" : 0
        }
      }, {
        "uid" : "106ebd967fae2a45",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/129//#testresult/106ebd967fae2a45",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699458213413,
          "stop" : 1699458213413,
          "duration" : 0
        }
      }, {
        "uid" : "7eb86d79207d0b02",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/128//#testresult/7eb86d79207d0b02",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699454632234,
          "stop" : 1699454632234,
          "duration" : 0
        }
      }, {
        "uid" : "46fa58872175ae53",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/127//#testresult/46fa58872175ae53",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699448606375,
          "stop" : 1699448606375,
          "duration" : 0
        }
      }, {
        "uid" : "6cda2167ea2cadbe",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/126//#testresult/6cda2167ea2cadbe",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699406742488,
          "stop" : 1699406742488,
          "duration" : 0
        }
      }, {
        "uid" : "d84330a939bce279",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/125//#testresult/d84330a939bce279",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699406580601,
          "stop" : 1699406580601,
          "duration" : 0
        }
      }, {
        "uid" : "54d625ac694fbd45",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/124//#testresult/54d625ac694fbd45",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699405681794,
          "stop" : 1699405681794,
          "duration" : 0
        }
      }, {
        "uid" : "6cb66549f94ae709",
        "reportUrl" : "https://apetrovskiy.github.io/testCoSi/123//#testresult/6cb66549f94ae709",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert True == False\n +  where False = runningWater([8, 5, 3], 10)",
        "time" : {
          "start" : 1699405244326,
          "stop" : 1699405244326,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "tag Python" ]
  },
  "source" : "eb305ecae86ccbe8.json",
  "parameterValues" : [ "[8, 5, 3]", "True", "10" ]
}