{"uid":"fe03efbfba7c2fa4","name":"test_combinationSum[input_array4-6-(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)]","fullName":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum","historyId":"d7972714ebfc1a2297d5da40e6f3c94e","time":{"start":1699404883634,"stop":1699404883635,"duration":1},"status":"failed","statusMessage":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","statusTrace":"input_array = [6, 5, 7, 1, 8, 2, ...], sum = 6\nexpected_result = '(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)'\n\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            ([8, 1, 8, 6, 8\n              ], 12, \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\"),\n            ([7, 2, 6, 5], 16,\n             \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\"\n             ),\n            # 5\n            ([6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9\n              ], 6, \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\"),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            ([8, 7, 1], 22,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\"\n             ),\n            # 9\n            ([6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9], 24,\n             \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\"\n             ),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            ([1, 1, 1, 3, 7, 3], 15,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\"\n             ),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8\n              ], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            ([7, 1, 9, 5, 1, 8, 5, 3], 13,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\"\n             ),\n            # 25\n            ([6, 3, 4, 8, 9, 8, 9, 2, 4, 8], 19,\n             \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\"\n             ),\n            ([4, 7, 7, 1, 3, 2, 8, 8, 9, 3], 7,\n             \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\"\n             ),\n            ([8, 5], 4, \"Empty\"),\n            ([7, 1, 3, 1, 3, 4, 7, 3, 9, 6], 23,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\"\n             ),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int,\n                            expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\nE         - (1 1)(1 1)(1 1)(1 1)\nE         + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:66: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"src.test.java.challenges.a20200530_combinationSum"},{"name":"suite","value":"test_combinationSum"},{"name":"host","value":"fv-az730-552"},{"name":"thread","value":"2193-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_result","value":"'(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)'"},{"name":"input_array","value":"[6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9]"},{"name":"sum","value":"6"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":64,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":64},"items":[{"uid":"45404f951449975d","reportUrl":"https://apetrovskiy.github.io/testCoSi/121//#testresult/45404f951449975d","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1699401791926,"stop":1699401791927,"duration":1}},{"uid":"a2383d9f703f0122","reportUrl":"https://apetrovskiy.github.io/testCoSi/120//#testresult/a2383d9f703f0122","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1699401091917,"stop":1699401091918,"duration":1}},{"uid":"5e4ace15f7440598","reportUrl":"https://apetrovskiy.github.io/testCoSi/118//#testresult/5e4ace15f7440598","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1699400359354,"stop":1699400359354,"duration":0}},{"uid":"d3a1ac225295f047","reportUrl":"https://apetrovskiy.github.io/testCoSi/119//#testresult/d3a1ac225295f047","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1699400395142,"stop":1699400395142,"duration":0}},{"uid":"c035dece30b2dbf9","reportUrl":"https://apetrovskiy.github.io/testCoSi/117//#testresult/c035dece30b2dbf9","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1699399352333,"stop":1699399352333,"duration":0}},{"uid":"a83c5d4660255c62","reportUrl":"https://apetrovskiy.github.io/codeSignTest/116//#testresult/a83c5d4660255c62","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668970125737,"stop":1668970125737,"duration":0}},{"uid":"1553b397bb6859d8","reportUrl":"https://apetrovskiy.github.io/codeSignTest/115//#testresult/1553b397bb6859d8","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668968915335,"stop":1668968915336,"duration":1}},{"uid":"3d44fcfb8f75cb8d","reportUrl":"https://apetrovskiy.github.io/codeSignTest/114//#testresult/3d44fcfb8f75cb8d","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668968769155,"stop":1668968769155,"duration":0}},{"uid":"51dcff38bafa8485","reportUrl":"https://apetrovskiy.github.io/codeSignTest/113//#testresult/51dcff38bafa8485","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668944150151,"stop":1668944150151,"duration":0}},{"uid":"9a5602f7fe611a5d","reportUrl":"https://apetrovskiy.github.io/codeSignTest/112//#testresult/9a5602f7fe611a5d","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668278364267,"stop":1668278364267,"duration":0}},{"uid":"9101ea9f6a006a5","reportUrl":"https://apetrovskiy.github.io/codeSignTest/111//#testresult/9101ea9f6a006a5","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668267383182,"stop":1668267383182,"duration":0}},{"uid":"a58f3d6e6c875e0d","reportUrl":"https://apetrovskiy.github.io/codeSignTest/110//#testresult/a58f3d6e6c875e0d","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668260798010,"stop":1668260798010,"duration":0}},{"uid":"c3b8f92682d35d2d","reportUrl":"https://apetrovskiy.github.io/codeSignTest/109//#testresult/c3b8f92682d35d2d","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1668258843275,"stop":1668258843276,"duration":1}},{"uid":"26a8878f8be33d83","reportUrl":"https://apetrovskiy.github.io/codeSignTest/108//#testresult/26a8878f8be33d83","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1627191154030,"stop":1627191154030,"duration":0}},{"uid":"3734d0f17804663d","reportUrl":"https://apetrovskiy.github.io/codeSignTest/107//#testresult/3734d0f17804663d","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1625858287202,"stop":1625858287202,"duration":0}},{"uid":"67baf81638ab4e9","reportUrl":"https://apetrovskiy.github.io/codeSignTest/106//#testresult/67baf81638ab4e9","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1625858122521,"stop":1625858122522,"duration":1}},{"uid":"f2fbb3abbd061246","reportUrl":"https://apetrovskiy.github.io/codeSignTest/105//#testresult/f2fbb3abbd061246","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1622041025327,"stop":1622041025328,"duration":1}},{"uid":"7df4031d1ca5ac5c","reportUrl":"https://apetrovskiy.github.io/codeSignTest/104//#testresult/7df4031d1ca5ac5c","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1622036132878,"stop":1622036132878,"duration":0}},{"uid":"dc33ac702a999e82","reportUrl":"https://apetrovskiy.github.io/codeSignTest/103//#testresult/dc33ac702a999e82","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1622015220298,"stop":1622015220298,"duration":0}},{"uid":"ae50a91f34bf80e","reportUrl":"https://apetrovskiy.github.io/codeSignTest/102//#testresult/ae50a91f34bf80e","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1... 5)(2 2 2)(6)' == '(1 1)(1 1)(1 1)(1 1)'\n  - (1 1)(1 1)(1 1)(1 1)\n  + (1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)","time":{"start":1622011371894,"stop":1622011371895,"duration":1}}]},"tags":[]},"source":"fe03efbfba7c2fa4.json","parameterValues":["'(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)'","[6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9]","6"]}