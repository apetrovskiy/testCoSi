{
  "uid" : "5777430c84723a88",
  "name" : "test_combinationSum[input_array20-24-(4 4 4 4 4 4)]",
  "fullName" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum",
  "historyId" : "7d0b9017b111825f32f74cafea0b02da",
  "time" : {
    "start" : 1668258843365,
    "stop" : 1668258843365,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
  "statusTrace" : "input_array = [4, 7], sum = 24, expected_result = '(4 4 4 4 4 4)'\n\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            ([8, 1, 8, 6, 8\n              ], 12, \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\"),\n            ([7, 2, 6, 5], 16,\n             \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\"\n             ),\n            # 5\n            ([6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9\n              ], 6, \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\"),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            ([8, 7, 1], 22,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\"\n             ),\n            # 9\n            ([6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9], 24,\n             \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\"\n             ),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            ([1, 1, 1, 3, 7, 3], 15,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\"\n             ),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8\n              ], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            ([7, 1, 9, 5, 1, 8, 5, 3], 13,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\"\n             ),\n            # 25\n            ([6, 3, 4, 8, 9, 8, 9, 2, 4, 8], 19,\n             \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\"\n             ),\n            ([4, 7, 7, 1, 3, 2, 8, 8, 9, 3], 7,\n             \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\"\n             ),\n            ([8, 5], 4, \"Empty\"),\n            ([7, 1, 3, 1, 3, 4, 7, 3, 9, 6], 23,\n             \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\"\n             ),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int,\n                            expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\nE         - (1 1)(1 1)\nE         + (4 4 4 4 4 4)\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:66: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "src.test.java.challenges.a20200530_combinationSum"
  }, {
    "name" : "suite",
    "value" : "test_combinationSum"
  }, {
    "name" : "host",
    "value" : "fv-az241-855"
  }, {
    "name" : "thread",
    "value" : "1967-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "src.test.java.challenges.a20200530_combinationSum.test_combinationSum"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expected_result",
    "value" : "'(4 4 4 4 4 4)'"
  }, {
    "name" : "input_array",
    "value" : "[4, 7]"
  }, {
    "name" : "sum",
    "value" : "24"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 51,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 51
      },
      "items" : [ {
        "uid" : "881a8b85d7ff4b0f",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/108//#testresult/881a8b85d7ff4b0f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1627191154120,
          "stop" : 1627191154120,
          "duration" : 0
        }
      }, {
        "uid" : "27fe8cd900cf5312",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/107//#testresult/27fe8cd900cf5312",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1625858287290,
          "stop" : 1625858287291,
          "duration" : 1
        }
      }, {
        "uid" : "f1a0c8b81c94f526",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/106//#testresult/f1a0c8b81c94f526",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1625858122636,
          "stop" : 1625858122637,
          "duration" : 1
        }
      }, {
        "uid" : "33b19f78125cc20b",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/105//#testresult/33b19f78125cc20b",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1622041025435,
          "stop" : 1622041025435,
          "duration" : 0
        }
      }, {
        "uid" : "f496f1184ecf671",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/104//#testresult/f496f1184ecf671",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1622036132983,
          "stop" : 1622036132983,
          "duration" : 0
        }
      }, {
        "uid" : "1dc2f92202e9c203",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/103//#testresult/1dc2f92202e9c203",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1622015220432,
          "stop" : 1622015220432,
          "duration" : 0
        }
      }, {
        "uid" : "6822d14feaf91d29",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/102//#testresult/6822d14feaf91d29",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1622011372000,
          "stop" : 1622011372000,
          "duration" : 0
        }
      }, {
        "uid" : "f64211d893e0766d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/101//#testresult/f64211d893e0766d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1622010789068,
          "stop" : 1622010789068,
          "duration" : 0
        }
      }, {
        "uid" : "30e586ddea6b009d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/100//#testresult/30e586ddea6b009d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1622009562983,
          "stop" : 1622009562983,
          "duration" : 0
        }
      }, {
        "uid" : "47aea64847c4d995",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/99//#testresult/47aea64847c4d995",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1621953167812,
          "stop" : 1621953167812,
          "duration" : 0
        }
      }, {
        "uid" : "17e4f4287859111c",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/98//#testresult/17e4f4287859111c",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1621950735044,
          "stop" : 1621950735045,
          "duration" : 1
        }
      }, {
        "uid" : "7b37bedb2a99228d",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/96//#testresult/7b37bedb2a99228d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1621949362593,
          "stop" : 1621949362593,
          "duration" : 0
        }
      }, {
        "uid" : "61990d2bb7346c1f",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/95//#testresult/61990d2bb7346c1f",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1621531932286,
          "stop" : 1621531932286,
          "duration" : 0
        }
      }, {
        "uid" : "43d1be25d6e56623",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/94//#testresult/43d1be25d6e56623",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1620951308908,
          "stop" : 1620951308909,
          "duration" : 1
        }
      }, {
        "uid" : "ea98a9d319588303",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/92//#testresult/ea98a9d319588303",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1620951226699,
          "stop" : 1620951226699,
          "duration" : 0
        }
      }, {
        "uid" : "d215d599d9745ea3",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/91//#testresult/d215d599d9745ea3",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1620951214524,
          "stop" : 1620951214525,
          "duration" : 1
        }
      }, {
        "uid" : "baa5aeaee87e0da",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/90//#testresult/baa5aeaee87e0da",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1620951121933,
          "stop" : 1620951121933,
          "duration" : 0
        }
      }, {
        "uid" : "af95fe3b8c55ecfd",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/89//#testresult/af95fe3b8c55ecfd",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1620950096815,
          "stop" : 1620950096815,
          "duration" : 0
        }
      }, {
        "uid" : "511714c90354f547",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/88//#testresult/511714c90354f547",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1620933877496,
          "stop" : 1620933877496,
          "duration" : 0
        }
      }, {
        "uid" : "e3e17fb5e1f6ac53",
        "reportUrl" : "https://apetrovskiy.github.io/codeSignTest/87//#testresult/e3e17fb5e1f6ac53",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert '(4 4 4 4 4 4)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (4 4 4 4 4 4)",
        "time" : {
          "start" : 1620917155539,
          "stop" : 1620917155540,
          "duration" : 1
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5777430c84723a88.json",
  "parameterValues" : [ "'(4 4 4 4 4 4)'", "[4, 7]", "24" ]
}