{"uid":"9f289eeeb3e2525e","name":"test Python","fullName":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum","historyId":"d403784ee53af6a3ca182ae19920b37e","time":{"start":1700246467737,"stop":1700246467737,"duration":0},"status":"failed","statusMessage":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","statusTrace":"input_array = [4, 3, 1], sum = 3, expected_result = '(1 1 1)(3)'\n\n    @allure.epic(\"epic Challenges\")\n    @allure.feature(\"feature Challenges by date\")\n    @allure.story(\"story Combination sum\")\n    @allure.parent_suite(\"suite Python\")\n    @allure.title(\"test Python\")\n    @allure.tag(\"tag Python\")\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            (\n                [8, 1, 8, 6, 8],\n                12,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\",\n            ),\n            (\n                [7, 2, 6, 5],\n                16,\n                \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\",\n            ),\n            # 5\n            (\n                [6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9],\n                6,\n                \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\",\n            ),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            (\n                [8, 7, 1],\n                22,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\",\n            ),\n            # 9\n            (\n                [6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9],\n                24,\n                \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\",\n            ),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            (\n                [1, 1, 1, 3, 7, 3],\n                15,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\",\n            ),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            (\n                [7, 1, 9, 5, 1, 8, 5, 3],\n                13,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\",\n            ),\n            # 25\n            (\n                [6, 3, 4, 8, 9, 8, 9, 2, 4, 8],\n                19,\n                \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\",\n            ),\n            (\n                [4, 7, 7, 1, 3, 2, 8, 8, 9, 3],\n                7,\n                \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\",\n            ),\n            ([8, 5], 4, \"Empty\"),\n            (\n                [7, 1, 3, 1, 3, 4, 7, 3, 9, 6],\n                23,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\",\n            ),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int, expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\nE         - (1 1)(1 1)\nE         + (1 1 1)(3)\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:93: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"suite Python"},{"name":"story","value":"story Combination sum"},{"name":"feature","value":"feature Challenges by date"},{"name":"epic","value":"epic Challenges"},{"name":"tag","value":"tag Python"},{"name":"suite","value":"test_combinationSum"},{"name":"host","value":"fv-az985-217"},{"name":"thread","value":"2264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_result","value":"'(1 1 1)(3)'"},{"name":"input_array","value":"[4, 3, 1]"},{"name":"sum","value":"3"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":82,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":82},"items":[{"uid":"d853c67ade7e82dc","reportUrl":"https://apetrovskiy.github.io/testCoSi/139//#testresult/d853c67ade7e82dc","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699886397498,"stop":1699886397499,"duration":1}},{"uid":"ff6606dcdc107028","reportUrl":"https://apetrovskiy.github.io/testCoSi/138//#testresult/ff6606dcdc107028","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699884948235,"stop":1699884948235,"duration":0}},{"uid":"a2e381210cee1b53","reportUrl":"https://apetrovskiy.github.io/testCoSi/137//#testresult/a2e381210cee1b53","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699884922487,"stop":1699884922487,"duration":0}},{"uid":"e45c794d7748939e","reportUrl":"https://apetrovskiy.github.io/testCoSi/136//#testresult/e45c794d7748939e","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699563854603,"stop":1699563854603,"duration":0}},{"uid":"503d70ad9d5810b9","reportUrl":"https://apetrovskiy.github.io/testCoSi/135//#testresult/503d70ad9d5810b9","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699550001019,"stop":1699550001020,"duration":1}},{"uid":"aa2ff2a53679dc0","reportUrl":"https://apetrovskiy.github.io/testCoSi/133//#testresult/aa2ff2a53679dc0","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699518512557,"stop":1699518512557,"duration":0}},{"uid":"f875b4597ec2654a","reportUrl":"https://apetrovskiy.github.io/testCoSi/134//#testresult/f875b4597ec2654a","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699517732540,"stop":1699517732541,"duration":1}},{"uid":"a5040ac5416bd548","reportUrl":"https://apetrovskiy.github.io/testCoSi/132//#testresult/a5040ac5416bd548","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699465981945,"stop":1699465981945,"duration":0}},{"uid":"6d8e0782aa4cd9cb","reportUrl":"https://apetrovskiy.github.io/testCoSi/131//#testresult/6d8e0782aa4cd9cb","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699463230575,"stop":1699463230575,"duration":0}},{"uid":"f355918fc07b8121","reportUrl":"https://apetrovskiy.github.io/testCoSi/130//#testresult/f355918fc07b8121","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699462400392,"stop":1699462400392,"duration":0}},{"uid":"4f424c4197750394","reportUrl":"https://apetrovskiy.github.io/testCoSi/129//#testresult/4f424c4197750394","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699458213266,"stop":1699458213267,"duration":1}},{"uid":"e564ce09fbbb294a","reportUrl":"https://apetrovskiy.github.io/testCoSi/128//#testresult/e564ce09fbbb294a","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699454632139,"stop":1699454632139,"duration":0}},{"uid":"b8846ccfe96e166a","reportUrl":"https://apetrovskiy.github.io/testCoSi/127//#testresult/b8846ccfe96e166a","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699448606279,"stop":1699448606280,"duration":1}},{"uid":"80604cf582cfad10","reportUrl":"https://apetrovskiy.github.io/testCoSi/126//#testresult/80604cf582cfad10","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699406742343,"stop":1699406742343,"duration":0}},{"uid":"9091e95e37522eb8","reportUrl":"https://apetrovskiy.github.io/testCoSi/125//#testresult/9091e95e37522eb8","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699406580457,"stop":1699406580458,"duration":1}},{"uid":"db2c9616d85d7299","reportUrl":"https://apetrovskiy.github.io/testCoSi/124//#testresult/db2c9616d85d7299","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699405681698,"stop":1699405681699,"duration":1}},{"uid":"a191cf1f1c0eb4f7","reportUrl":"https://apetrovskiy.github.io/testCoSi/123//#testresult/a191cf1f1c0eb4f7","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699405244231,"stop":1699405244231,"duration":0}},{"uid":"ba3f52058b4e3cd8","reportUrl":"https://apetrovskiy.github.io/testCoSi/122//#testresult/ba3f52058b4e3cd8","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699404883692,"stop":1699404883692,"duration":0}},{"uid":"6c76947fe50afc7c","reportUrl":"https://apetrovskiy.github.io/testCoSi/121//#testresult/6c76947fe50afc7c","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699401791997,"stop":1699401791997,"duration":0}},{"uid":"8886c8a25562303f","reportUrl":"https://apetrovskiy.github.io/testCoSi/120//#testresult/8886c8a25562303f","status":"failed","statusDetails":"AssertionError: assert '(1 1 1)(3)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1)(3)","time":{"start":1699401091990,"stop":1699401091991,"duration":1}}]},"tags":["tag Python"]},"source":"9f289eeeb3e2525e.json","parameterValues":["'(1 1 1)(3)'","[4, 3, 1]","3"]}