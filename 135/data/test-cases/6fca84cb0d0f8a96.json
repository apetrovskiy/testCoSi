{"uid":"6fca84cb0d0f8a96","name":"test Python","fullName":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum","historyId":"50d155d197d117806158b4470aad5ba3","time":{"start":1699550001039,"stop":1699550001039,"duration":0},"status":"failed","statusMessage":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","statusTrace":"input_array = [1, 8], sum = 16\nexpected_result = '(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)'\n\n    @allure.epic(\"epic Challenges\")\n    @allure.feature(\"feature Challenges by date\")\n    @allure.story(\"story Combination sum\")\n    @allure.suite(\"suite Python\")\n    @allure.title(\"test Python\")\n    @allure.tag(\"tag Python\")\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            (\n                [8, 1, 8, 6, 8],\n                12,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\",\n            ),\n            (\n                [7, 2, 6, 5],\n                16,\n                \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\",\n            ),\n            # 5\n            (\n                [6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9],\n                6,\n                \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\",\n            ),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            (\n                [8, 7, 1],\n                22,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\",\n            ),\n            # 9\n            (\n                [6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9],\n                24,\n                \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\",\n            ),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            (\n                [1, 1, 1, 3, 7, 3],\n                15,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\",\n            ),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            (\n                [7, 1, 9, 5, 1, 8, 5, 3],\n                13,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\",\n            ),\n            # 25\n            (\n                [6, 3, 4, 8, 9, 8, 9, 2, 4, 8],\n                19,\n                \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\",\n            ),\n            (\n                [4, 7, 7, 1, 3, 2, 8, 8, 9, 3],\n                7,\n                \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\",\n            ),\n            ([8, 5], 4, \"Empty\"),\n            (\n                [7, 1, 3, 1, 3, 4, 7, 3, 9, 6],\n                23,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\",\n            ),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int, expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\nE         - (1 1)(1 1)\nE         + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:93: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"suite Python"},{"name":"tag","value":"tag Python"},{"name":"story","value":"story Combination sum"},{"name":"feature","value":"feature Challenges by date"},{"name":"epic","value":"epic Challenges"},{"name":"parentSuite","value":"src.test.java.challenges.a20200530_combinationSum"},{"name":"host","value":"fv-az172-268"},{"name":"thread","value":"2130-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_result","value":"'(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)'"},{"name":"input_array","value":"[1, 8]"},{"name":"sum","value":"16"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":77,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":77},"items":[{"uid":"c79652ba1f79eb","reportUrl":"https://apetrovskiy.github.io/testCoSi/133//#testresult/c79652ba1f79eb","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699518512573,"stop":1699518512573,"duration":0}},{"uid":"5748eb426637492a","reportUrl":"https://apetrovskiy.github.io/testCoSi/134//#testresult/5748eb426637492a","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699517732557,"stop":1699517732557,"duration":0}},{"uid":"3dd9d41054486513","reportUrl":"https://apetrovskiy.github.io/testCoSi/132//#testresult/3dd9d41054486513","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699465981961,"stop":1699465981962,"duration":1}},{"uid":"1cdaf5a55340a679","reportUrl":"https://apetrovskiy.github.io/testCoSi/131//#testresult/1cdaf5a55340a679","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699463230594,"stop":1699463230594,"duration":0}},{"uid":"74114aaada4b1764","reportUrl":"https://apetrovskiy.github.io/testCoSi/130//#testresult/74114aaada4b1764","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699462400413,"stop":1699462400413,"duration":0}},{"uid":"abfa4f164fd5fa96","reportUrl":"https://apetrovskiy.github.io/testCoSi/129//#testresult/abfa4f164fd5fa96","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699458213289,"stop":1699458213290,"duration":1}},{"uid":"867bfe3d7ca42fca","reportUrl":"https://apetrovskiy.github.io/testCoSi/128//#testresult/867bfe3d7ca42fca","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699454632154,"stop":1699454632154,"duration":0}},{"uid":"36e8140d079cfadd","reportUrl":"https://apetrovskiy.github.io/testCoSi/127//#testresult/36e8140d079cfadd","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699448606294,"stop":1699448606295,"duration":1}},{"uid":"9db5fc0e3fe19819","reportUrl":"https://apetrovskiy.github.io/testCoSi/126//#testresult/9db5fc0e3fe19819","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699406742366,"stop":1699406742366,"duration":0}},{"uid":"34fed532050d8823","reportUrl":"https://apetrovskiy.github.io/testCoSi/125//#testresult/34fed532050d8823","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699406580480,"stop":1699406580481,"duration":1}},{"uid":"92de8e2d186b1af8","reportUrl":"https://apetrovskiy.github.io/testCoSi/124//#testresult/92de8e2d186b1af8","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699405681714,"stop":1699405681714,"duration":0}},{"uid":"53de3b125382324e","reportUrl":"https://apetrovskiy.github.io/testCoSi/123//#testresult/53de3b125382324e","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699405244246,"stop":1699405244246,"duration":0}},{"uid":"92e3d5903cf60270","reportUrl":"https://apetrovskiy.github.io/testCoSi/122//#testresult/92e3d5903cf60270","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699404883707,"stop":1699404883708,"duration":1}},{"uid":"dd43ede2b6a8b6e6","reportUrl":"https://apetrovskiy.github.io/testCoSi/121//#testresult/dd43ede2b6a8b6e6","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699401792015,"stop":1699401792015,"duration":0}},{"uid":"e0c58e8803d00dde","reportUrl":"https://apetrovskiy.github.io/testCoSi/120//#testresult/e0c58e8803d00dde","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699401092008,"stop":1699401092009,"duration":1}},{"uid":"d8a0dafcf40bbec3","reportUrl":"https://apetrovskiy.github.io/testCoSi/118//#testresult/d8a0dafcf40bbec3","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699400359440,"stop":1699400359440,"duration":0}},{"uid":"d27c4706fc9ccdc","reportUrl":"https://apetrovskiy.github.io/testCoSi/119//#testresult/d27c4706fc9ccdc","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699400395217,"stop":1699400395217,"duration":0}},{"uid":"2e46b071c47b89d1","reportUrl":"https://apetrovskiy.github.io/testCoSi/117//#testresult/2e46b071c47b89d1","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1699399352446,"stop":1699399352446,"duration":0}},{"uid":"92eee56d210140a1","reportUrl":"https://apetrovskiy.github.io/codeSignTest/116//#testresult/92eee56d210140a1","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1668970125822,"stop":1668970125823,"duration":1}},{"uid":"21f8136fc3aaacb6","reportUrl":"https://apetrovskiy.github.io/codeSignTest/115//#testresult/21f8136fc3aaacb6","status":"failed","statusDetails":"AssertionError: assert '(1 1 1 1 1 1...1 1 1 8)(8 8)' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + (1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)","time":{"start":1668968915454,"stop":1668968915454,"duration":0}}]},"tags":["tag Python"]},"source":"6fca84cb0d0f8a96.json","parameterValues":["'(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)'","[1, 8]","16"]}