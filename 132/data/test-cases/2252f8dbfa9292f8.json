{"uid":"2252f8dbfa9292f8","name":"test Python","fullName":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum#test_combinationSum","historyId":"f2f422a54f73619ebc494d85ce02c0d5","time":{"start":1699465981889,"stop":1699465981889,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","statusTrace":"input_array = [5, 2, 2, 6], sum = 3, expected_result = 'Empty'\n\n    @allure.epic(\"epic Challenges\")\n    @allure.feature(\"feature Challenges by date\")\n    @allure.story(\"story Combination sum\")\n    @allure.title(\"test Python\")\n    @allure.tag(\"tag Python\")\n    @pytest.mark.parametrize(\n        \"input_array,sum,expected_result\",\n        [\n            ([2, 3, 5, 9], 9, \"(2 2 2 3)(2 2 5)(3 3 3)(9)\"),\n            ([2, 4, 6, 8], 8, \"(2 2 2 2)(2 2 4)(2 6)(4 4)(8)\"),\n            (\n                [8, 1, 8, 6, 8],\n                12,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 6)(1 1 1 1 8)(6 6)\",\n            ),\n            (\n                [7, 2, 6, 5],\n                16,\n                \"(2 2 2 2 2 2 2 2)(2 2 2 2 2 6)(2 2 2 5 5)(2 2 5 7)(2 2 6 6)(2 7 7)(5 5 6)\",\n            ),\n            # 5\n            (\n                [6, 5, 7, 1, 8, 2, 9, 9, 7, 7, 9],\n                6,\n                \"(1 1 1 1 1 1)(1 1 1 1 2)(1 1 2 2)(1 5)(2 2 2)(6)\",\n            ),\n            ([5, 2, 2, 6], 3, \"Empty\"),\n            ([4, 6, 4, 2], 7, \"Empty\"),\n            (\n                [8, 7, 1],\n                22,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 8)(1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 7 8)(1 1 1 1 1 1 8 8)(1 7 7 7)(7 7 8)\",\n            ),\n            # 9\n            (\n                [6, 5, 6, 3, 3, 4, 3, 2, 2, 9, 9],\n                24,\n                \"(2 2 2 2 2 2 2 2 2 2 2 2)(2 2 2 2 2 2 2 2 2 2 4)(2 2 2 2 2 2 2 2 2 3 3)(2 2 2 2 2 2 2 2 2 6)(2 2 2 2 2 2 2 2 3 5)(2 2 2 2 2 2 2 2 4 4)(2 2 2 2 2 2 2 3 3 4)(2 2 2 2 2 2 2 4 6)(2 2 2 2 2 2 2 5 5)(2 2 2 2 2 2 3 3 3 3)(2 2 2 2 2 2 3 3 6)(2 2 2 2 2 2 3 4 5)(2 2 2 2 2 2 3 9)(2 2 2 2 2 2 4 4 4)(2 2 2 2 2 2 6 6)(2 2 2 2 2 3 3 3 5)(2 2 2 2 2 3 3 4 4)(2 2 2 2 2 3 5 6)(2 2 2 2 2 4 4 6)(2 2 2 2 2 4 5 5)(2 2 2 2 2 5 9)(2 2 2 2 3 3 3 3 4)(2 2 2 2 3 3 4 6)(2 2 2 2 3 3 5 5)(2 2 2 2 3 4 4 5)(2 2 2 2 3 4 9)(2 2 2 2 4 4 4 4)(2 2 2 2 4 6 6)(2 2 2 2 5 5 6)(2 2 2 3 3 3 3 3 3)(2 2 2 3 3 3 3 6)(2 2 2 3 3 3 4 5)(2 2 2 3 3 3 9)(2 2 2 3 3 4 4 4)(2 2 2 3 3 6 6)(2 2 2 3 4 5 6)(2 2 2 3 5 5 5)(2 2 2 3 6 9)(2 2 2 4 4 4 6)(2 2 2 4 4 5 5)(2 2 2 4 5 9)(2 2 2 6 6 6)(2 2 2 9 9)(2 2 3 3 3 3 3 5)(2 2 3 3 3 3 4 4)(2 2 3 3 3 5 6)(2 2 3 3 4 4 6)(2 2 3 3 4 5 5)(2 2 3 3 5 9)(2 2 3 4 4 4 5)(2 2 3 4 4 9)(2 2 3 5 6 6)(2 2 4 4 4 4 4)(2 2 4 4 6 6)(2 2 4 5 5 6)(2 2 5 5 5 5)(2 2 5 6 9)(2 3 3 3 3 3 3 4)(2 3 3 3 3 4 6)(2 3 3 3 3 5 5)(2 3...\",\n            ),\n            ([6, 5, 5, 7], 1, \"Empty\"),\n            ([7, 3, 9, 8, 4, 5], 8, \"(3 5)(4 4)(8)\"),\n            (\n                [1, 1, 1, 3, 7, 3],\n                15,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 3 3 3)(1 1 1 1 1 3 7)(1 1 1 3 3 3 3)(1 1 3 3 7)(1 7 7)(3 3 3 3 3)\",\n            ),\n            # 13\n            ([6, 8, 7, 7, 9], 14, \"(6 8)(7 7)\"),\n            ([7, 3, 9, 2, 7, 7], 2, \"(2)\"),\n            ([6, 3, 7], 18, \"(3 3 3 3 3 3)(3 3 3 3 6)(3 3 6 6)(6 6 6)\"),\n            ([3, 8, 3, 9], 17, \"(3 3 3 8)(8 9)\"),\n            # 17\n            ([4, 3, 1], 3, \"(1 1 1)(3)\"),\n            ([8, 6, 4, 7, 6, 5, 3, 6, 3], 4, \"(4)\"),\n            ([3, 9, 4], 20, \"(3 3 3 3 4 4)(3 4 4 9)(4 4 4 4 4)\"),\n            ([1, 8], 16, \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 8)(8 8)\"),\n            # 21\n            ([4, 7], 24, \"(4 4 4 4 4 4)\"),\n            ([2, 3, 7, 5, 3, 3, 8, 9, 6, 2], 1, \"Empty\"),\n            ([5, 9, 5, 7, 8], 13, \"(5 8)\"),\n            (\n                [7, 1, 9, 5, 1, 8, 5, 3],\n                13,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 5)(1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 7)(1 1 1 1 1 3 5)(1 1 1 1 1 8)(1 1 1 1 3 3 3)(1 1 1 1 9)(1 1 1 3 7)(1 1 1 5 5)(1 1 3 3 5)(1 1 3 8)(1 3 3 3 3)(1 3 9)(1 5 7)(3 3 7)(3 5 5)(5 8)\",\n            ),\n            # 25\n            (\n                [6, 3, 4, 8, 9, 8, 9, 2, 4, 8],\n                19,\n                \"(2 2 2 2 2 2 2 2 3)(2 2 2 2 2 2 3 4)(2 2 2 2 2 3 3 3)(2 2 2 2 2 3 6)(2 2 2 2 2 9)(2 2 2 2 3 4 4)(2 2 2 2 3 8)(2 2 2 3 3 3 4)(2 2 2 3 4 6)(2 2 2 4 9)(2 2 3 3 3 3 3)(2 2 3 3 3 6)(2 2 3 3 9)(2 2 3 4 4 4)(2 2 3 4 8)(2 2 3 6 6)(2 2 6 9)(2 3 3 3 4 4)(2 3 3 3 8)(2 3 4 4 6)(2 3 6 8)(2 4 4 9)(2 8 9)(3 3 3 3 3 4)(3 3 3 4 6)(3 3 4 9)(3 4 4 4 4)(3 4 4 8)(3 4 6 6)(3 8 8)(4 6 9)\",\n            ),\n            (\n                [4, 7, 7, 1, 3, 2, 8, 8, 9, 3],\n                7,\n                \"(1 1 1 1 1 1 1)(1 1 1 1 1 2)(1 1 1 1 3)(1 1 1 2 2)(1 1 1 4)(1 1 2 3)(1 2 2 2)(1 2 4)(1 3 3)(2 2 3)(3 4)(7)\",\n            ),\n            ([8, 5], 4, \"Empty\"),\n            (\n                [7, 1, 3, 1, 3, 4, 7, 3, 9, 6],\n                23,\n                \"(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 6)(1 1 1 1 1 1 1 1 1 1 1 1 1 1 9)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 3 4)(1 1 1 1 1 1 1 1 1 1 1 1 1 3 7)(1 1 1 1 1 1 1 1 1 1 1 1 1 4 6)(1 1 1 1 1 1 1 1 1 1 1 1 3 4 4)(1 1 1 1 1 1 1 1 1 1 1 1 4 7)(1 1 1 1 1 1 1 1 1 1 1 3 3 3 3)(1 1 1 1 1 1 1 1 1 1 1 3 3 6)(1 1 1 1 1 1 1 1 1 1 1 3 9)(1 1 1 1 1 1 1 1 1 1 1 4 4 4)(1 1 1 1 1 1 1 1 1 1 1 6 6)(1 1 1 1 1 1 1 1 1 1 3 3 3 4)(1 1 1 1 1 1 1 1 1 1 3 3 7)(1 1 1 1 1 1 1 1 1 1 3 4 6)(1 1 1 1 1 1 1 1 1 1 4 9)(1 1 1 1 1 1 1 1 1 1 6 7)(1 1 1 1 1 1 1 1 1 3 3 4 4)(1 1 1 1 1 1 1 1 1 3 4 7)(1 1 1 1 1 1 1 1 1 4 4 6)(1 1 1 1 1 1 1 1 1 7 7)(1 1 1 1 1 1 1 1 3 3 3 3 3)(1 1 1 1 1 1 1 1 3 3 3 6)(1 1...\",\n            ),\n        ],\n    )\n    def test_combinationSum(input_array: List[int], sum: int, expected_result: str):\n>       assert expected_result == combinationSum(input_array, sum)\nE       AssertionError: assert 'Empty' == '(1 1)(1 1)'\nE         - (1 1)(1 1)\nE         + Empty\n\nsrc/test/java/challenges/a20200530_combinationSum/test_combinationSum.py:92: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"epic Challenges"},{"name":"tag","value":"tag Python"},{"name":"story","value":"story Combination sum"},{"name":"feature","value":"feature Challenges by date"},{"name":"parentSuite","value":"src.test.java.challenges.a20200530_combinationSum"},{"name":"suite","value":"test_combinationSum"},{"name":"host","value":"fv-az801-431"},{"name":"thread","value":"2347-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.test.java.challenges.a20200530_combinationSum.test_combinationSum"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_result","value":"'Empty'"},{"name":"input_array","value":"[5, 2, 2, 6]"},{"name":"sum","value":"3"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":74,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":74},"items":[{"uid":"c3a9f38b1cb004dd","reportUrl":"https://apetrovskiy.github.io/testCoSi/131//#testresult/c3a9f38b1cb004dd","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699463230508,"stop":1699463230508,"duration":0}},{"uid":"9c29aa37b85b4b12","reportUrl":"https://apetrovskiy.github.io/testCoSi/130//#testresult/9c29aa37b85b4b12","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699462400321,"stop":1699462400321,"duration":0}},{"uid":"9829bdad39efde82","reportUrl":"https://apetrovskiy.github.io/testCoSi/129//#testresult/9829bdad39efde82","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699458213177,"stop":1699458213178,"duration":1}},{"uid":"7af2b42266d4bfc8","reportUrl":"https://apetrovskiy.github.io/testCoSi/128//#testresult/7af2b42266d4bfc8","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699454632088,"stop":1699454632088,"duration":0}},{"uid":"cc856d0906790ab2","reportUrl":"https://apetrovskiy.github.io/testCoSi/127//#testresult/cc856d0906790ab2","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699448606227,"stop":1699448606228,"duration":1}},{"uid":"54c1c423cfd563ab","reportUrl":"https://apetrovskiy.github.io/testCoSi/126//#testresult/54c1c423cfd563ab","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699406742246,"stop":1699406742247,"duration":1}},{"uid":"e7188f18ad994bae","reportUrl":"https://apetrovskiy.github.io/testCoSi/125//#testresult/e7188f18ad994bae","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699406580381,"stop":1699406580382,"duration":1}},{"uid":"3845b84ff834ef6e","reportUrl":"https://apetrovskiy.github.io/testCoSi/124//#testresult/3845b84ff834ef6e","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699405681635,"stop":1699405681635,"duration":0}},{"uid":"a7230a41c2afe565","reportUrl":"https://apetrovskiy.github.io/testCoSi/123//#testresult/a7230a41c2afe565","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699405244179,"stop":1699405244179,"duration":0}},{"uid":"b79ab5745fa2e024","reportUrl":"https://apetrovskiy.github.io/testCoSi/122//#testresult/b79ab5745fa2e024","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699404883639,"stop":1699404883640,"duration":1}},{"uid":"91047dacfa02987d","reportUrl":"https://apetrovskiy.github.io/testCoSi/121//#testresult/91047dacfa02987d","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699401791933,"stop":1699401791933,"duration":0}},{"uid":"a4b6f67cd17f2d3f","reportUrl":"https://apetrovskiy.github.io/testCoSi/120//#testresult/a4b6f67cd17f2d3f","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699401091924,"stop":1699401091925,"duration":1}},{"uid":"cb0c42950f793ef3","reportUrl":"https://apetrovskiy.github.io/testCoSi/118//#testresult/cb0c42950f793ef3","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699400359360,"stop":1699400359360,"duration":0}},{"uid":"80a3e1cb10dd8d13","reportUrl":"https://apetrovskiy.github.io/testCoSi/119//#testresult/80a3e1cb10dd8d13","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699400395147,"stop":1699400395147,"duration":0}},{"uid":"3671c7389ea55262","reportUrl":"https://apetrovskiy.github.io/testCoSi/117//#testresult/3671c7389ea55262","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1699399352341,"stop":1699399352341,"duration":0}},{"uid":"ab8d276452817a59","reportUrl":"https://apetrovskiy.github.io/codeSignTest/116//#testresult/ab8d276452817a59","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1668970125743,"stop":1668970125743,"duration":0}},{"uid":"6c55f10ac866475a","reportUrl":"https://apetrovskiy.github.io/codeSignTest/115//#testresult/6c55f10ac866475a","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1668968915343,"stop":1668968915343,"duration":0}},{"uid":"4079f01e5f30490","reportUrl":"https://apetrovskiy.github.io/codeSignTest/114//#testresult/4079f01e5f30490","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1668968769162,"stop":1668968769162,"duration":0}},{"uid":"327bff8b83230f5e","reportUrl":"https://apetrovskiy.github.io/codeSignTest/113//#testresult/327bff8b83230f5e","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1668944150157,"stop":1668944150157,"duration":0}},{"uid":"6323612d2820be8","reportUrl":"https://apetrovskiy.github.io/codeSignTest/112//#testresult/6323612d2820be8","status":"failed","statusDetails":"AssertionError: assert 'Empty' == '(1 1)(1 1)'\n  - (1 1)(1 1)\n  + Empty","time":{"start":1668278364272,"stop":1668278364273,"duration":1}}]},"tags":["tag Python"]},"source":"2252f8dbfa9292f8.json","parameterValues":["'Empty'","[5, 2, 2, 6]","3"]}