{"uid":"14926ce258fd5861","name":"test Python","fullName":"src.test.java.challenges.a20201217_runningWater.test_running_water#test_running_water","historyId":"d28e714a3dc980a17e01a69f9a9f98cc","time":{"start":1699517732651,"stop":1699517732652,"duration":1},"status":"failed","statusMessage":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","statusTrace":"cap = [57, 30, 11], volume = 65, expected_result = True\n\n    @allure.epic(\"epic Challenges\")\n    @allure.feature(\"feature Challenges by date\")\n    @allure.story(\"story Running water\")\n    @allure.title(\"test Python\")\n    @allure.tag(\"tag Python\")\n    # @pytest.mark.skip(reason=\"TODO: no way of currently testing this\")\n    @pytest.mark.parametrize(\"cap,volume,expected_result\", test_data)\n    def test_running_water(cap: List[int], volume: int, expected_result: bool):\n>       assert expected_result == runningWater(cap, volume)\nE       assert True == False\nE        +  where False = runningWater([57, 30, 11], 65)\n\nsrc/test/java/challenges/a20201217_runningWater/test_running_water.py:29: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"feature","value":"feature Challenges by date"},{"name":"epic","value":"epic Challenges"},{"name":"story","value":"story Running water"},{"name":"tag","value":"tag Python"},{"name":"parentSuite","value":"src.test.java.challenges.a20201217_runningWater"},{"name":"suite","value":"test_running_water"},{"name":"host","value":"fv-az1146-81"},{"name":"thread","value":"2210-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"src.test.java.challenges.a20201217_runningWater.test_running_water"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"cap","value":"[57, 30, 11]"},{"name":"expected_result","value":"True"},{"name":"volume","value":"65"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":122,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":125},"items":[{"uid":"63367c10ac04b248","reportUrl":"https://apetrovskiy.github.io/testCoSi/132//#testresult/63367c10ac04b248","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699465982055,"stop":1699465982055,"duration":0}},{"uid":"6546aaed0ae65f10","reportUrl":"https://apetrovskiy.github.io/testCoSi/131//#testresult/6546aaed0ae65f10","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699463230702,"stop":1699463230702,"duration":0}},{"uid":"1854244e3229f98e","reportUrl":"https://apetrovskiy.github.io/testCoSi/130//#testresult/1854244e3229f98e","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699462400533,"stop":1699462400534,"duration":1}},{"uid":"4db0a5b98d3cf4bf","reportUrl":"https://apetrovskiy.github.io/testCoSi/129//#testresult/4db0a5b98d3cf4bf","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699458213425,"stop":1699458213425,"duration":0}},{"uid":"46071bc6001bcc94","reportUrl":"https://apetrovskiy.github.io/testCoSi/128//#testresult/46071bc6001bcc94","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699454632242,"stop":1699454632242,"duration":0}},{"uid":"6b45b4fc53e50a0e","reportUrl":"https://apetrovskiy.github.io/testCoSi/127//#testresult/6b45b4fc53e50a0e","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699448606383,"stop":1699448606383,"duration":0}},{"uid":"2ec5fefaaa07f157","reportUrl":"https://apetrovskiy.github.io/testCoSi/126//#testresult/2ec5fefaaa07f157","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699406742500,"stop":1699406742501,"duration":1}},{"uid":"6501a890d7376465","reportUrl":"https://apetrovskiy.github.io/testCoSi/125//#testresult/6501a890d7376465","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699406580614,"stop":1699406580614,"duration":0}},{"uid":"627ef4d8720996bf","reportUrl":"https://apetrovskiy.github.io/testCoSi/124//#testresult/627ef4d8720996bf","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699405681802,"stop":1699405681802,"duration":0}},{"uid":"af13647aa21ac5dd","reportUrl":"https://apetrovskiy.github.io/testCoSi/123//#testresult/af13647aa21ac5dd","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699405244334,"stop":1699405244334,"duration":0}},{"uid":"56fda880db8e16a7","reportUrl":"https://apetrovskiy.github.io/testCoSi/122//#testresult/56fda880db8e16a7","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699404883798,"stop":1699404883798,"duration":0}},{"uid":"ab63d0d6c699fa59","reportUrl":"https://apetrovskiy.github.io/testCoSi/121//#testresult/ab63d0d6c699fa59","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699401792125,"stop":1699401792125,"duration":0}},{"uid":"be1127cd690add28","reportUrl":"https://apetrovskiy.github.io/testCoSi/120//#testresult/be1127cd690add28","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699401092116,"stop":1699401092116,"duration":0}},{"uid":"85e26924bd016715","reportUrl":"https://apetrovskiy.github.io/testCoSi/118//#testresult/85e26924bd016715","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699400359542,"stop":1699400359542,"duration":0}},{"uid":"205a99f0aa1fc8d4","reportUrl":"https://apetrovskiy.github.io/testCoSi/119//#testresult/205a99f0aa1fc8d4","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699400395308,"stop":1699400395308,"duration":0}},{"uid":"6bc547d11a4d18ea","reportUrl":"https://apetrovskiy.github.io/testCoSi/117//#testresult/6bc547d11a4d18ea","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1699399352584,"stop":1699399352584,"duration":0}},{"uid":"4e163c7b59fb0fa2","reportUrl":"https://apetrovskiy.github.io/codeSignTest/116//#testresult/4e163c7b59fb0fa2","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1668970125929,"stop":1668970125929,"duration":0}},{"uid":"fbb095e39dcbea39","reportUrl":"https://apetrovskiy.github.io/codeSignTest/115//#testresult/fbb095e39dcbea39","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1668968915591,"stop":1668968915592,"duration":1}},{"uid":"24c27e180ec7a199","reportUrl":"https://apetrovskiy.github.io/codeSignTest/114//#testresult/24c27e180ec7a199","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1668968769385,"stop":1668968769386,"duration":1}},{"uid":"dd7b390627803853","reportUrl":"https://apetrovskiy.github.io/codeSignTest/113//#testresult/dd7b390627803853","status":"failed","statusDetails":"AssertionError: assert True == False\n +  where False = runningWater([57, 30, 11], 65)","time":{"start":1668944150336,"stop":1668944150336,"duration":0}}]},"tags":["tag Python"]},"source":"14926ce258fd5861.json","parameterValues":["[57, 30, 11]","True","65"]}